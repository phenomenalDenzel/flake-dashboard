{"ast":null,"code":"var _jsxFileName = \"/home/denzel/flake-dashboard/src/components/collections/acquisition/acquisition.js\";\nimport React, { Component } from \"react\";\nimport \"./acquisition.css\";\nimport Aux from \"../../../hoc/Aux\"; // import List from \"../../../ui/list/list\";\n\nimport Acquisitions from \"./acquisitions\";\nimport Acquire from \"./acquire/Acquire\";\nimport axios from \"../../../axios-scrape\";\n\nclass Acquisition extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      acquisitions: [],\n      books: [],\n      searchTerm: \"\",\n      toAcquisitions: true,\n      toAcquire: false,\n      error: null\n    };\n\n    this.togglePages = () => {\n      console.log(\"hello\");\n      this.setState(prevState => {\n        return {\n          toAcquisitions: !prevState.toAcquisitions,\n          toAcquire: !prevState.toAcquire\n        };\n      });\n    };\n\n    this.scrapeBooks = () => {\n      axios.get(`?q=${this.state.searchTerm}&maxResults=40&startIndex=0`).then(res => {\n        console.log(res);\n        this.setState({\n          books: this.cleanData(res.data.items)\n        });\n      }).catch(error => this.setState({\n        error\n      }));\n      const queryString = encodeURIComponent(\"search_query\") + \"=\" + encodeURIComponent(this.state.searchTerm);\n      this.props.history.push({\n        pathname: this.props.match.path + \"/acquire/results\",\n        search: \"?\" + queryString\n      });\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n    };\n\n    this.cleanData = books => {\n      const cleanedDate = books.map(book => {\n        if (!book.volumeInfo.hasOwnProperty(\"imageLinks\")) {\n          book.volumeInfo[\"imageLinks\"] = {\n            thumbnail: \"https://vignette.wikia.nocookie.net/pandorahearts/images/a/ad/Not_available.jpg/revision/latest?cb=20141028171337\"\n          };\n        }\n\n        if (!book.volumeInfo.hasOwnProperty(\"authors\")) {\n          book.volumeInfo[\"authors\"] = [];\n        }\n\n        return book;\n      });\n      return cleanedDate;\n    };\n  }\n\n  render() {\n    const attributes = [\"Date Of Acquisition\", \"Number Of Books Acquired\", \"Budget Cost\"];\n    let pages = /*#__PURE__*/React.createElement(Acquisitions, {\n      attributes: attributes,\n      acquisitions: this.state.acquisitions,\n      togglePages: this.togglePages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    });\n\n    if (this.state.toAcquire) {\n      pages = /*#__PURE__*/React.createElement(Acquire, {\n        togglePages: this.togglePages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    }, pages);\n  }\n\n}\n\nexport default Acquisition;","map":{"version":3,"sources":["/home/denzel/flake-dashboard/src/components/collections/acquisition/acquisition.js"],"names":["React","Component","Aux","Acquisitions","Acquire","axios","Acquisition","state","acquisitions","books","searchTerm","toAcquisitions","toAcquire","error","togglePages","console","log","setState","prevState","scrapeBooks","get","then","res","cleanData","data","items","catch","queryString","encodeURIComponent","props","history","push","pathname","match","path","search","handleSearch","e","target","value","cleanedDate","map","book","volumeInfo","hasOwnProperty","thumbnail","render","attributes","pages"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./acquisition.css\";\nimport Aux from \"../../../hoc/Aux\";\n// import List from \"../../../ui/list/list\";\nimport Acquisitions from \"./acquisitions\";\nimport Acquire from \"./acquire/Acquire\";\nimport axios from \"../../../axios-scrape\";\n\nclass Acquisition extends Component {\n  state = {\n    acquisitions: [],\n    books: [],\n    searchTerm: \"\",\n    toAcquisitions: true,\n    toAcquire: false,\n    error: null,\n  };\n\n  togglePages = () => {\n    console.log(\"hello\");\n    this.setState((prevState) => {\n      return {\n        toAcquisitions: !prevState.toAcquisitions,\n        toAcquire: !prevState.toAcquire,\n      };\n    });\n  };\n\n  scrapeBooks = () => {\n    axios\n      .get(`?q=${this.state.searchTerm}&maxResults=40&startIndex=0`)\n      .then((res) => {\n        console.log(res);\n        this.setState({ books: this.cleanData(res.data.items) });\n      })\n      .catch((error) => this.setState({ error }));\n\n    const queryString =\n      encodeURIComponent(\"search_query\") +\n      \"=\" +\n      encodeURIComponent(this.state.searchTerm);\n    this.props.history.push({\n      pathname: this.props.match.path + \"/acquire/results\",\n      search: \"?\" + queryString,\n    });\n  };\n\n  handleSearch = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  cleanData = (books) => {\n    const cleanedDate = books.map((book) => {\n      if (!book.volumeInfo.hasOwnProperty(\"imageLinks\")) {\n        book.volumeInfo[\"imageLinks\"] = {\n          thumbnail:\n            \"https://vignette.wikia.nocookie.net/pandorahearts/images/a/ad/Not_available.jpg/revision/latest?cb=20141028171337\",\n        };\n      }\n      if (!book.volumeInfo.hasOwnProperty(\"authors\")) {\n        book.volumeInfo[\"authors\"] = [];\n      }\n      return book;\n    });\n\n    return cleanedDate;\n  };\n\n  render() {\n    const attributes = [\n      \"Date Of Acquisition\",\n      \"Number Of Books Acquired\",\n      \"Budget Cost\",\n    ];\n\n    let pages = (\n      <Acquisitions\n        attributes={attributes}\n        acquisitions={this.state.acquisitions}\n        togglePages={this.togglePages}\n      />\n    );\n\n    if (this.state.toAcquire) {\n      pages = <Acquire togglePages={this.togglePages} />;\n    }\n    return <Aux>{pages}</Aux>;\n  }\n}\nexport default Acquisition;\n"]},"metadata":{},"sourceType":"module"}