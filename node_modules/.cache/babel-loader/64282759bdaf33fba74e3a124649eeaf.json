{"ast":null,"code":"var _jsxFileName = \"/home/denzel/flake-dashboard/src/components/collections/acquisition/acquire/Acquire.js\";\nimport React, { Component } from \"react\";\nimport \"./Acquire.css\";\nimport Button from \"../../../../ui/button/button\";\nimport SearchResult from \"./searchresult\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"../../../../axios-scrape\";\n\nclass Acquire extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: \"\",\n      books: []\n    };\n\n    this.scrapeBooks = () => {\n      axios.get(`?q=${this.state.searchTerm}&maxResults=40&startIndex=0`).then(res => {\n        console.log(res);\n        this.setState({\n          books: this.cleanData(res.data.items)\n        });\n      }).catch(error => this.setState({\n        error\n      }));\n      const queryString = encodeURIComponent(\"search_query\") + \"=\" + encodeURIComponent(this.state.searchTerm);\n      this.props.history.push({\n        pathname: this.props.match.path + \"/acquire/results\",\n        search: \"?\" + queryString\n      });\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n    };\n\n    this.cleanData = books => {\n      const cleanedDate = books.map(book => {\n        if (!book.volumeInfo.hasOwnProperty(\"imageLinks\")) {\n          book.volumeInfo[\"imageLinks\"] = {\n            thumbnail: \"https://vignette.wikia.nocookie.net/pandorahearts/images/a/ad/Not_available.jpg/revision/latest?cb=20141028171337\"\n          };\n        }\n\n        if (!book.volumeInfo.hasOwnProperty(\"authors\")) {\n          book.volumeInfo[\"authors\"] = [];\n        }\n\n        return book;\n      });\n      return cleanedDate;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      btnType: \"primary\",\n      style: {\n        float: \"left\"\n      },\n      clicked: this.props.togglePages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Back To Acquisitions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clr\",\n      style: {\n        marginBottom: \"0.75rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Title\",\n      onChange: this.handleSearch,\n      value: this.state.searchTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"fill\",\n      clicked: this.scrapeBooks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Scrape\")), /*#__PURE__*/React.createElement(Route, {\n      path: \"collections/acquisition/acquire\" + \"/results\",\n      render: () => /*#__PURE__*/React.createElement(SearchResult, {\n        books: this.state.books,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Acquire;","map":{"version":3,"sources":["/home/denzel/flake-dashboard/src/components/collections/acquisition/acquire/Acquire.js"],"names":["React","Component","Button","SearchResult","Route","axios","Acquire","state","searchTerm","books","scrapeBooks","get","then","res","console","log","setState","cleanData","data","items","catch","error","queryString","encodeURIComponent","props","history","push","pathname","match","path","search","handleSearch","e","target","value","cleanedDate","map","book","volumeInfo","hasOwnProperty","thumbnail","render","float","togglePages","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Acquire.css\";\nimport Button from \"../../../../ui/button/button\";\nimport SearchResult from \"./searchresult\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"../../../../axios-scrape\";\n\nclass Acquire extends Component {\n  state = {\n    searchTerm: \"\",\n    books: [],\n  };\n  scrapeBooks = () => {\n    axios\n      .get(`?q=${this.state.searchTerm}&maxResults=40&startIndex=0`)\n      .then((res) => {\n        console.log(res);\n        this.setState({ books: this.cleanData(res.data.items) });\n      })\n      .catch((error) => this.setState({ error }));\n\n    const queryString =\n      encodeURIComponent(\"search_query\") +\n      \"=\" +\n      encodeURIComponent(this.state.searchTerm);\n    this.props.history.push({\n      pathname: this.props.match.path + \"/acquire/results\",\n      search: \"?\" + queryString,\n    });\n  };\n\n  handleSearch = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  cleanData = (books) => {\n    const cleanedDate = books.map((book) => {\n      if (!book.volumeInfo.hasOwnProperty(\"imageLinks\")) {\n        book.volumeInfo[\"imageLinks\"] = {\n          thumbnail:\n            \"https://vignette.wikia.nocookie.net/pandorahearts/images/a/ad/Not_available.jpg/revision/latest?cb=20141028171337\",\n        };\n      }\n      if (!book.volumeInfo.hasOwnProperty(\"authors\")) {\n        book.volumeInfo[\"authors\"] = [];\n      }\n      return book;\n    });\n\n    return cleanedDate;\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          btnType=\"primary\"\n          style={{ float: \"left\" }}\n          clicked={this.props.togglePages}\n        >\n          Back To Acquisitions\n        </Button>\n        <div className=\"clr\" style={{ marginBottom: \"0.75rem\" }}></div>\n        <div className=\"search-area\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter Title\"\n            onChange={this.handleSearch}\n            value={this.state.searchTerm}\n          />\n          <Button btnType=\"fill\" clicked={this.scrapeBooks}>\n            Scrape\n          </Button>\n        </div>\n        <Route\n          path={\"collections/acquisition/acquire\" + \"/results\"}\n          render={() => <SearchResult books={this.state.books} />}\n        />\n      </div>\n    );\n  }\n}\nexport default Acquire;\n"]},"metadata":{},"sourceType":"module"}